name: Deploy to Google Cloud Functions

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FUNCTION_NAME: x-bot-typescript
  REGION: asia-northeast1
  RUNTIME: nodejs20

jobs:
  check-quota:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
    steps:
      - id: check
        run: |
          # 現在の月の使用量を確認
          CURRENT_INVOCATIONS=$(gcloud functions get-iam-policy "$FUNCTION_NAME" --region="$REGION" --format='json' | jq '.invocations')
          # 無料枠は月200万回まで
          if [ "$CURRENT_INVOCATIONS" -lt 2000000 ]; then
            echo "should_deploy=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_deploy=false" >> "$GITHUB_OUTPUT"
            echo "Warning: Free tier limit reached. Deployment skipped."
          fi

  deploy:
    needs: check-quota
    if: needs.check-quota.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Deploy to Cloud Functions
        uses: google-github-actions/deploy-cloud-functions@v2
        with:
          name: ${{ env.FUNCTION_NAME }}
          runtime: ${{ env.RUNTIME }}
          region: ${{ env.REGION }}
          source_dir: dist
          entry_point: honoFunction
          memory_mb: 256
          min_instances: 0
          max_instances: 1
          timeout: 60
          env_vars: |
            X_API_KEY=${{ secrets.X_API_KEY }}
            X_API_SECRET=${{ secrets.X_API_SECRET }}
            X_ACCESS_TOKEN=${{ secrets.X_ACCESS_TOKEN }}
            X_ACCESS_TOKEN_SECRET=${{ secrets.X_ACCESS_TOKEN_SECRET }}